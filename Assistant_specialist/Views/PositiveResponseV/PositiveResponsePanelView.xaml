<UserControl x:Class="Assistant_specialist.Views.PositiveResponseV.PositiveResponsePanelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:Properties="clr-namespace:Assistant_specialist.Properties"
             xmlns:CustomControl="clr-namespace:Assistant_specialist.CustomControl"
             xmlns:Validations="clr-namespace:Assistant_specialist.Validations"
             xmlns:Models="clr-namespace:Assistant_specialist.Models.PositiveResponseM"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ContextMenu x:Key="ContextMenuTexBox">
            <MenuItem Command="Cut"/>
            <MenuItem Command="Copy"/>
            <MenuItem Command="Paste"/>
            <Separator/>
            <MenuItem Header="Очистить поле" Command="{Binding ClearTextCommand}" CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        </ContextMenu>
        <ContextMenu x:Key="ContextMenuDatePicker">
            <MenuItem Command="Cut"/>
            <MenuItem Command="Copy"/>
            <MenuItem Command="Paste"/>
        </ContextMenu>
        <i:EventTrigger x:Key="ValidateTextLostFocus" x:Shared="False" EventName="LostFocus">
            <i:InvokeCommandAction Command="{Binding ValidateTextLostFocusCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type CustomControl:WatermarkTextBox}}}"/>
        </i:EventTrigger>
        <i:EventTrigger x:Key="ValidateTextEnterButton" x:Shared="False" EventName="PreviewKeyDown">
            <i:InvokeCommandAction Command="{Binding ValidateTextEnterButtonCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type CustomControl:WatermarkTextBox}}}"/>
        </i:EventTrigger>
        <i:EventTrigger x:Key="ValidateTextTimers" x:Shared="False" EventName="TextChanged">
            <i:InvokeCommandAction Command="{Binding ValidateTextTimersCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type CustomControl:WatermarkTextBox}}}"/>
        </i:EventTrigger>
        <i:EventTrigger x:Key="UpdateOutgoingDate" x:Shared="False" EventName="SelectedDateChanged">
            <i:InvokeCommandAction Command="{Binding UpdateDateChangedCommand}" CommandParameter="{Binding ElementName=OutgoingDate}"/>
        </i:EventTrigger>
        <i:EventTrigger x:Key="UpdateContractTerminationDate" x:Shared="False" EventName="SelectedDateChanged">
            <i:InvokeCommandAction Command="{Binding UpdateDateChangedCommand}" CommandParameter="{Binding ElementName=ContractTerminationDate}"/>
        </i:EventTrigger>
        <i:EventTrigger x:Key="UpdateStatementRecalculationDate" x:Shared="False" EventName="SelectedDateChanged">
            <i:InvokeCommandAction Command="{Binding UpdateDateChangedCommand}" CommandParameter="{Binding ElementName=StatementRecalculationDate}"/>
        </i:EventTrigger>
        <i:EventTrigger x:Key="ValidateDateDiscountPanel" x:Shared="False" EventName="SelectedDateChanged">
            <i:InvokeCommandAction Command="{Binding ValidateDateDiscountPanelCommand}" CommandParameter="{Binding ElementName=DateDiscountPanel}"/>
        </i:EventTrigger>
        <Style x:Key="ContractTerminationDateStyle" TargetType="{x:Type CustomControl:WatermarkDatePicker}" BasedOn="{StaticResource {x:Type CustomControl:WatermarkDatePicker}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=StatementTermination, Path=IsChecked}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AmountDebtStyle" TargetType="{x:Type CustomControl:WatermarkTextBox}" BasedOn="{StaticResource {x:Type CustomControl:WatermarkTextBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=StatementTermination, Path=IsChecked}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DiscountTypeStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="SelectedIndex" Value="0"/>
            <Setter Property="ItemsSource">
                <Setter.Value>
                    <Binding>
                        <Binding.Source>
                            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                                <ObjectDataProvider.MethodParameters>
                                    <x:Type Type="Models:DiscountType"/>
                                </ObjectDataProvider.MethodParameters>
                            </ObjectDataProvider>
                        </Binding.Source>
                    </Binding>
                </Setter.Value>
            </Setter>
            <Setter Property="SelectedItem" Value="{Binding DiscountType, Mode=TwoWay}"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionValueConverter}}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=StatementTermination, Path=IsChecked}" Value="True">
                    <Setter Property="SelectedIndex" Value="1"/>
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DiscountsStyle"  TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="SelectedIndex" Value="0"/>
            <Setter Property="ItemsSource">
                <Setter.Value>
                    <Binding>
                        <Binding.Source>
                            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                                <ObjectDataProvider.MethodParameters>
                                    <x:Type Type="Models:Discounts"/>
                                </ObjectDataProvider.MethodParameters>
                            </ObjectDataProvider>
                        </Binding.Source>
                    </Binding>
                </Setter.Value>
            </Setter>
            <Setter Property="SelectedItem" Value="{Binding Discounts, Mode=TwoWay}"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionValueConverter}}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DiscountType, Path=SelectedIndex}" Value="1">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DateDiscountPanelStyle" TargetType="{x:Type StackPanel}" BasedOn="{StaticResource DateDiscountPanelErrorStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DiscountType, Path=SelectedIndex}" Value="1">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AmountRecalculationStyle" TargetType="{x:Type CustomControl:WatermarkTextBox}" BasedOn="{StaticResource {x:Type CustomControl:WatermarkTextBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DiscountType, Path=SelectedIndex}" Value="0">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <StackPanel>
        <!--Данные абонента-->
        <Expander x:Name="ExpanderOne" Header="{x:Static Properties:Resources.SubscriberData}" IsExpanded="{Binding ExpanderOneOpen}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Expanded">
                    <i:InvokeCommandAction Command="{Binding ExpanderStatesCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander}}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel>
                <!--Номер договора-->
                <CustomControl:WatermarkTextBox x:Name="ContractNumber" WatermarkText="{x:Static Properties:Resources.ContractNumber}" ContextMenu="{StaticResource ContextMenuTexBox}" Margin="10,20,20,10">
                    <CustomControl:WatermarkTextBox.Text>
                        <Binding Path="ContractNumber" Mode="TwoWay" UpdateSourceTrigger="Explicit">
                            <Binding.ValidationRules>
                                <Validations:ValidatingText Pattern="^[6]{2}[0]{2}\d{8}$" ErrorText="{x:Static Properties:Resources.ContractNumberNotValid}"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </CustomControl:WatermarkTextBox.Text>
                    <i:Interaction.Triggers>
                        <StaticResource ResourceKey="ValidateTextLostFocus"/>
                        <StaticResource ResourceKey="ValidateTextEnterButton"/>
                        <StaticResource ResourceKey="ValidateTextTimers"/>
                    </i:Interaction.Triggers>
                </CustomControl:WatermarkTextBox>
                <!--Дата договора-->
                <CustomControl:WatermarkDatePicker x:Name="ContractDate" WatermarkText="{x:Static Properties:Resources.ContractDate}" Margin="10,10,20,10" SelectedDate="{Binding ContractDateUnchecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ContextMenu="{StaticResource ContextMenuDatePicker}">
                    <i:Interaction.Triggers>
                        <StaticResource ResourceKey="UpdateOutgoingDate"/>
                        <StaticResource ResourceKey="UpdateContractTerminationDate"/>
                        <StaticResource ResourceKey="UpdateStatementRecalculationDate"/>
                        <StaticResource ResourceKey="ValidateDateDiscountPanel"/>
                    </i:Interaction.Triggers>
                </CustomControl:WatermarkDatePicker>
                <!--Фамилия Имя Отчество-->
                <CustomControl:WatermarkTextBox x:Name="FullName" WatermarkText="{x:Static Properties:Resources.FullName}" ContextMenu="{StaticResource ContextMenuTexBox}" Margin="10,10,20,10">
                    <CustomControl:WatermarkTextBox.Text>
                        <Binding Path="FullName" Mode="TwoWay" UpdateSourceTrigger="Explicit">
                            <Binding.ValidationRules>
                                <Validations:ValidatingText Pattern="^([А-Я][а-яё]+\s){2}[А-Я][а-яё]+$" ErrorText="{x:Static Properties:Resources.FullNameNotValid}"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </CustomControl:WatermarkTextBox.Text>
                    <i:Interaction.Triggers>
                        <StaticResource ResourceKey="ValidateTextLostFocus"/>
                        <StaticResource ResourceKey="ValidateTextEnterButton"/>
                        <StaticResource ResourceKey="ValidateTextTimers"/>
                    </i:Interaction.Triggers>
                </CustomControl:WatermarkTextBox>
                <!--Пол-->
                <GroupBox Margin="10,2,20,10">
                    <GroupBox.Header>
                        <TextBlock Background="#ff535353" Padding="2,0" Foreground="Silver" FontStyle="Italic" Text="{x:Static Properties:Resources.Gender}"/>
                    </GroupBox.Header>
                    <StackPanel Margin="3" HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal">
                        <RadioButton x:Name="GenderMale" GroupName="Gender" IsChecked="{Binding Gender, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Male}" Content="{Binding Gender, Converter={StaticResource EnumDescriptionValueConverter}, ConverterParameter=Male}"/>
                        <RadioButton GroupName="Gender" IsChecked="{Binding Gender, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Female}" Content="{Binding Gender, Converter={StaticResource EnumDescriptionValueConverter}, ConverterParameter=Female}"/>
                    </StackPanel>
                </GroupBox>
                <!--Фактический адрес проживания-->
                <CustomControl:WatermarkTextBox x:Name="Address" WatermarkText="{x:Static Properties:Resources.Address}" ContextMenu="{StaticResource ContextMenuTexBox}" Margin="10,10,20,20">
                    <CustomControl:WatermarkTextBox.Text>
                        <Binding Path="Address" Mode="TwoWay" UpdateSourceTrigger="Explicit">
                            <Binding.ValidationRules>
                                <Validations:ValidatingText Pattern="^.*([,]\s)(\D+\1){2}\d+(\s?[/]\s?\d+)?\1\d+[;].*$" ErrorText="{x:Static Properties:Resources.AddressNotValid}"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </CustomControl:WatermarkTextBox.Text>
                    <i:Interaction.Triggers>
                        <StaticResource ResourceKey="ValidateTextLostFocus"/>
                        <StaticResource ResourceKey="ValidateTextEnterButton"/>
                        <StaticResource ResourceKey="ValidateTextTimers"/>
                    </i:Interaction.Triggers>
                </CustomControl:WatermarkTextBox>
            </StackPanel>
        </Expander>
        <!--Исходящие данные-->
        <Expander x:Name="ExpanderTwo" Header="{x:Static Properties:Resources.OutgoingData}" IsExpanded="{Binding ExpanderTwoOpen}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Expanded">
                    <i:InvokeCommandAction Command="{Binding ExpanderStatesCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander}}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel>
                <!--Исходящий номер-->
                <CustomControl:WatermarkTextBox x:Name="OutgoingNumber" WatermarkText="{x:Static Properties:Resources.OutgoingNumber}" ContextMenu="{StaticResource ContextMenuTexBox}" Margin="10,20,20,10">
                    <CustomControl:WatermarkTextBox.Text>
                        <Binding Path="OutgoingNumber" Mode="TwoWay" UpdateSourceTrigger="Explicit">
                            <Binding.ValidationRules>
                                <Validations:ValidatingText Pattern="^\d{1,10}$" ErrorText="{x:Static Properties:Resources.OutgoingNumberNotValid}"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </CustomControl:WatermarkTextBox.Text>
                    <i:Interaction.Triggers>
                        <StaticResource ResourceKey="ValidateTextLostFocus"/>
                        <StaticResource ResourceKey="ValidateTextEnterButton"/>
                        <StaticResource ResourceKey="ValidateTextTimers"/>
                    </i:Interaction.Triggers>
                </CustomControl:WatermarkTextBox>
                <!--Дата ответа-->
                <CustomControl:WatermarkDatePicker x:Name="OutgoingDate" WatermarkText="{x:Static Properties:Resources.OutgoingDate}" Margin="10,10,20,20" SelectedDate="{Binding OutgoingDateUnchecked, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" ContextMenu="{StaticResource ContextMenuDatePicker}"/>
            </StackPanel>
        </Expander>
        <!--Данные по договору-->
        <Expander x:Name="ExpanderThree" Header="{x:Static Properties:Resources.ContractData}" IsExpanded="{Binding ExpanderThreeOpen}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Expanded">
                    <i:InvokeCommandAction Command="{Binding ExpanderStatesCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander}}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel>
                <!--Заявление на расторжение-->
                <CheckBox x:Name="StatementTermination" Content="{x:Static Properties:Resources.StatementTermination}" Margin="13,20,20,10" IsChecked="{Binding StatementTermination}"/>
                <!--Дата расторжения-->
                <CustomControl:WatermarkDatePicker x:Name="ContractTerminationDate" WatermarkText="{x:Static Properties:Resources.ContractTerminationDate}" Margin="10,10,20,10" SelectedDate="{Binding ContractTerminationDateUnchecked, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ContractTerminationDateStyle}" ContextMenu="{StaticResource ContextMenuDatePicker}"/>
                <!--Сумма долга-->
                <CustomControl:WatermarkTextBox x:Name="AmountDebt" WatermarkText="{x:Static Properties:Resources.AmountDebt}" ContextMenu="{StaticResource ContextMenuTexBox}" Margin="10,10,20,10" Style="{StaticResource AmountDebtStyle}">
                    <CustomControl:WatermarkTextBox.Text>
                        <Binding Path="AmountDebt" UpdateSourceTrigger="Explicit" Mode="OneWayToSource" Converter="{StaticResource AmountInWordsDecimalStringConverter}">
                            <Binding.ValidationRules>
                                <Validations:ValidatingText Pattern="^\d{1,6}([.,]\d{2})?$" ErrorText="{x:Static Properties:Resources.AmountDebtNotValid}"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </CustomControl:WatermarkTextBox.Text>
                    <i:Interaction.Triggers>
                        <StaticResource ResourceKey="ValidateTextLostFocus"/>
                        <StaticResource ResourceKey="ValidateTextEnterButton"/>
                        <StaticResource ResourceKey="ValidateTextTimers"/>
                    </i:Interaction.Triggers>
                </CustomControl:WatermarkTextBox>
                <!--Заявление на перерасчет-->
                <CheckBox Content="{x:Static Properties:Resources.StatementRecalculation}" IsChecked="{Binding StatementRecalculation}" IsEnabled="False" Margin="13,10,20,10"/>
                <!--Дата заявления на перерасчет-->
                <CustomControl:WatermarkDatePicker x:Name="StatementRecalculationDate" WatermarkText="{x:Static Properties:Resources.StatementRecalculationDate}" Margin="10,10,20,10" SelectedDate="{Binding StatementRecalculationDateUnchecked, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" ContextMenu="{StaticResource ContextMenuDatePicker}"/>
                <!--Тип скидки-->
                <ComboBox x:Name="DiscountType" Margin="10,10,20,10" Style="{StaticResource DiscountTypeStyle}"/>
                <!--Список скидок-->
                <ComboBox x:Name="Discounts" Margin="10,10,20,10" Style="{StaticResource DiscountsStyle}"/>
                <!--Дата начала и окончания скидки-->
                <StackPanel x:Name="DateDiscountPanel" Margin="10,10,20,10" Style="{StaticResource DateDiscountPanelStyle}">
                    <StackPanel.BindingGroup>
                        <BindingGroup>
                            <BindingGroup.ValidationRules>
                                <Validations:ValidatingDates DateRangeFrom="1" DateRangeTo="183" ErrorText1="{x:Static Properties:Resources.ContractDateNotValid}" ErrorText2="{x:Static Properties:Resources.StartEndDateDiscountNotValid1}" ErrorText3="{x:Static Properties:Resources.StartEndDateDiscountNotValid2}" ValidationStep="UpdatedValue"/>
                            </BindingGroup.ValidationRules>
                        </BindingGroup>
                    </StackPanel.BindingGroup>
                    <CustomControl:WatermarkDatePicker x:Name="StartDateDiscount" WatermarkText="{x:Static Properties:Resources.StartDateDiscount}" Margin="0,0,0,20" SelectedDate="{Binding StartDateDiscountUnchecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ContextMenu="{StaticResource ContextMenuDatePicker}">
                        <i:Interaction.Triggers>
                            <StaticResource ResourceKey="ValidateDateDiscountPanel"/>
                        </i:Interaction.Triggers>
                    </CustomControl:WatermarkDatePicker>
                    <CustomControl:WatermarkDatePicker x:Name="EndDateDiscounts" WatermarkText="{x:Static Properties:Resources.EndDateDiscounts}" SelectedDate="{Binding EndDateDiscountUnchecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ContextMenu="{StaticResource ContextMenuDatePicker}">
                        <i:Interaction.Triggers>
                            <StaticResource ResourceKey="ValidateDateDiscountPanel"/>
                        </i:Interaction.Triggers>
                    </CustomControl:WatermarkDatePicker>
                </StackPanel>
                <!--Сумма перерасчета-->
                <CustomControl:WatermarkTextBox x:Name="AmountRecalculation" WatermarkText="{x:Static Properties:Resources.AmountRecalculation}" ContextMenu="{StaticResource ContextMenuTexBox}" Margin="10,10,20,0" Style="{StaticResource AmountRecalculationStyle}">
                    <CustomControl:WatermarkTextBox.Text>
                        <Binding Path="AmountRecalculation" UpdateSourceTrigger="Explicit" Mode="OneWayToSource" Converter="{StaticResource AmountInWordsDecimalStringConverter}">
                            <Binding.ValidationRules>
                                <Validations:ValidatingText Pattern="^\d{1,6}([.,]\d{2})?$" ErrorText="{x:Static Properties:Resources.AmountRecalculationNotValid}"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </CustomControl:WatermarkTextBox.Text>
                    <i:Interaction.Triggers>
                        <StaticResource ResourceKey="ValidateTextLostFocus"/>
                        <StaticResource ResourceKey="ValidateTextEnterButton"/>
                        <StaticResource ResourceKey="ValidateTextTimers"/>
                    </i:Interaction.Triggers>
                </CustomControl:WatermarkTextBox>
            </StackPanel>
        </Expander>
    </StackPanel>
</UserControl>