<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="TabControl.Satic.BorderBrush" Color="#ff212121"/>
    <SolidColorBrush x:Key="TabItem.Static.Background" Color="#ff474747"/>
    <SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="#ff383838"/>
    <SolidColorBrush x:Key="TabItem.Selected.Transparent.Background" Color="#00b7b7b7"/>
    <SolidColorBrush x:Key="TabItem.Selected.Opaque.Background" Color="#ffb7b7b7"/>
    <SolidColorBrush x:Key="TabItem.Static.BorderBrush" Color="#ff212121"/>
    <SolidColorBrush x:Key="TabItem.Static.Foreground" Color="#ffffffff"/>
    <SolidColorBrush x:Key="TabItem.Selected.Foreground" Color="#ff000000"/>
    <SolidColorBrush x:Key="TabItem.CloseButton.Static.Background" Color="#00212121"/>
    <SolidColorBrush x:Key="TabItem.CloseButton.Pressed.Background" Color="#ff212121"/>
    <SolidColorBrush x:Key="TabItem.CloseButton.Static.BorderBrush" Color="#006a6a6a"/>
    <SolidColorBrush x:Key="TabItem.CloseButton.MouseOver.BorderBrush" Color="#ff6a6a6a"/>
    <SolidColorBrush x:Key="TabItem.CloseButton.Pressed.BorderBrush" Color="#ff6a6a6a"/>
    <SolidColorBrush x:Key="TabItem.CloseButton.Image.Static.Brush" x:Shared="False" Color="#ff6a6a6a"/>
    <SolidColorBrush x:Key="TabItem.CloseButton.Image.Pressed.Brush" Color="#ffb7b7b7"/>
    <SolidColorBrush x:Key="TabItem.CreateButton.Static.Background" Color="#00000000"/>
    <SolidColorBrush x:Key="TabItem.CreateButton.Image.Static.Brush" Color="#ffffffff"/>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControl.Satic.BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="PART_Root" KeyboardNavigation.TabNavigation="Local">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal"/>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(Grid.Opacity)" To="0.56" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ValidationStates">
                                <VisualState Name="Valid"/>
                                <VisualState Name="InvalidFocused"/>
                                <VisualState Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="Row0" Height="Auto"/>
                            <RowDefinition x:Name="Row1" Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="Column0" Width="Auto"/>
                            <ColumnDefinition x:Name="Column1" Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TabPanel x:Name="PART_Header" Panel.ZIndex="1" IsItemsHost="True" KeyboardNavigation.TabIndex="1"/>
                        <Border x:Name="PART_Content" Panel.ZIndex="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="Row0" Property="Height" Value="*"/>
                            <Setter TargetName="Column1" Property="Width" Value="*"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter TargetName="Row1" Property="Height" Value="*"/>
                            <Setter TargetName="Column0" Property="Width" Value="*"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="Row0" Property="Height" Value="*"/>
                            <Setter TargetName="Column0" Property="Width" Value="*"/>
                            <Setter TargetName="PART_Header" Property="Grid.Column" Value="1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="Row0" Property="Height" Value="*"/>
                            <Setter TargetName="Column0" Property="Width" Value="*"/>
                            <Setter TargetName="PART_Header" Property="Grid.Row" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.BorderBrush}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{StaticResource TabItem.Static.Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal"/>
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_BorderMouseOver" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{Binding Color, Source={StaticResource TabItem.MouseOver.Background}}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualState Name="Focused"/>
                                <VisualState Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_BorderSelected" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{Binding Color, Source={StaticResource TabItem.Selected.Opaque.Background}}" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{Binding Color, Source={StaticResource TabItem.Selected.Foreground}}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ValidationStates">
                                <VisualState Name="Valid"/>
                                <VisualState Name="InvalidFocused"/>
                                <VisualState Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_BorderMouseOver" Background="{TemplateBinding Background}"/>
                        <Border x:Name="PART_BorderSelected" Background="{StaticResource TabItem.Selected.Transparent.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter x:Name="PART_Content" ContentSource="Header" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                            <Setter Property="Margin" Value="0,0,-1,-1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top">
                            <Setter Property="Margin" Value="0,0,-1,-1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                            <Setter Property="Margin" Value="-1,0,0,-1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                            <Setter Property="Margin" Value="0,-1,-1,0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabItem.CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Background" Value="{StaticResource TabItem.CloseButton.Static.Background}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.CloseButton.Static.BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal"/>
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{Binding Color, Source={StaticResource TabItem.CloseButton.MouseOver.BorderBrush}}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{Binding Color, Source={StaticResource TabItem.CloseButton.Pressed.BorderBrush}}" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{Binding Color, Source={StaticResource TabItem.CloseButton.Pressed.Background}}" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="PART_Image" Storyboard.TargetProperty="(Image.Source).(DrawingImage.Drawing).(GeometryDrawing.Brush).(SolidColorBrush.Color)" To="{Binding Color, Source={StaticResource TabItem.CloseButton.Image.Pressed.Brush}}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualState Name="Focused"/>
                                <VisualState Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ValidationStates">
                                <VisualState Name="Valid"/>
                                <VisualState Name="InvalidFocused"/>
                                <VisualState Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Image x:Name="PART_Image" Width="6" Height="6">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <GeometryDrawing Brush="{StaticResource TabItem.CloseButton.Image.Static.Brush}" Geometry="M3,4 L4.91,6 L6,6 L6,4.969 L4.061,3.029 L6,1.09 L 6,0 L4.969,0 L3,1.969 L1.031,0 L0,0 L0,1.09 L1.939,3.029 L0,4.969 L0,6 L1.09,6 L3,4.09 Z"/>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabItem.CreateButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="MinWidth" Value="24"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Background" Value="{StaticResource TabItem.CreateButton.Static.Background}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal"/>
                                <VisualState Name="MouseOver"/>
                                <VisualState Name="Pressed"/>
                                <VisualState Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualState Name="Focused"/>
                                <VisualState Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ValidationStates">
                                <VisualState Name="Valid"/>
                                <VisualState Name="InvalidFocused"/>
                                <VisualState Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Image Width="12" Height="12">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <GeometryDrawing Brush="{StaticResource TabItem.CreateButton.Image.Static.Brush}" Geometry="M12,5 L7,5 L7,0 L5,0 L5,5 L0,5 L0,7 L5,7 L5,12 L7,12 L7,7 L12,7 L12,5 Z"/>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>